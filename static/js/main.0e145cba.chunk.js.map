{"version":3,"sources":["Interfaces/Interfaces.ts","Changelog.md","logo.svg","Utils/ApiServices.tsx","Components/HomeChart.tsx","Components/HomeTable.tsx","Components/Home.tsx","App.js","reportWebVitals.js","index.js"],"names":["Currencies","getProfit","a","headers","fetch","process","then","response","json","data","getAllPayouts","ChartType","HomeChart","props","miners","type","currency","payouts","Prop","PropChart","Hashrate","HashrateChart","Dindin","DindinChart","Payout","PayoutsChart","noDataChart","style","display","justifyContent","alignItems","height","CircularProgress","getChartBorderColor","entries","colors","i","push","getChartColor","chartOptions","formatter","window","innerHeight","options","maintainAspectRatio","onResize","newSize","canvas","parentNode","responsive","legend","plugins","datalabels","color","font","weight","align","anchor","clamp","Object","values","length","prop","labels","keys","sort","b","datasets","backgroundColor","label","map","m","v","Math","round","undefined","currString","ETH","orderedPayouts","t","obj","key","value","BRL","USD","reduce","acc","cur","miner","payout","borderColor","borderWidth","xAxes","stacked","yAxes","tooltips","mode","callbacks","footer","item","Number","xLabel","title","text","c","useStyles","makeStyles","table","minWidth","HomeTable","classes","TableContainer","component","Paper","marginTop","Table","className","size","TableHead","TableRow","TableCell","TableBody","TableRows","rows","payoutProp","minerData","Name","name","hashrate","HashRateMedio","proporcao","Proporcao","dindin","Sum","curMiner","find","p","createData","row","scope","theme","buttonHolder","width","margin","separator","border","borderTop","TabPanel","children","index","other","role","hidden","id","aria-labelledby","Box","Typography","a11yProps","Home","useState","setMiners","setPayouts","curChart","setChart","setCurrency","useEffect","profit_p","payouts_p","Promise","all","Tabs","textColor","indicatorColor","onChange","event","newValue","variant","scrollButtons","aria-label","Tab","icon","Icon","Button","onClick","changeCurrency","console","log","sum","sumString","fontWeight","boxShadow","borderRadius","background","root","flexGrow","menuButton","marginRight","spacing","toolbar","ChangelogModalHandler","openInitial","setFC","modalStyles","modal","position","maxWidth","palette","paper","padding","gridArea","getModalStyle","top","left","transform","modalStyle","open","setOpen","md","setMd","checked","setChecked","handleChange","target","handleClose","localStorage","setItem","skip","JSON","parse","getItem","mdPath","oldChangelog","newChangelog","btoa","unescape","encodeURIComponent","body","overflowY","Checkbox","inputProps","disableElevation","Modal","onClose","aria-describedby","App","forceChangelog","AppBar","Toolbar","Link","to","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","require","config","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e145cba.chunk.js","sourcesContent":["export interface Payout{\r\n    [key: string]: PayoutData\r\n}\r\n\r\ninterface PayoutData{\r\n    BRL: number,\r\n    ETH: number,\r\n    USD: number\r\n}\r\n\r\nexport default interface Miners{\r\n    [key: string]: MinerData\r\n}\r\n\r\nexport interface MinerData{\r\n    Name?:string,\r\n    Proporcao: number,\r\n    Dindin: number,\r\n    DindinBRL: number,\r\n    ETH: number,\r\n    HashRateMedio: number\r\n}\r\n\r\nexport enum Currencies { USD = 0, BRL = 1, ETH = 2 }","export default __webpack_public_path__ + \"static/media/Changelog.dc3e762c.md\";","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import Miners, { Payout } from \"../Interfaces/Interfaces\"\r\n\r\nexport async function getProfit(): Promise<Miners> {\r\n    const headers = {\r\n    }\r\n    return fetch(process.env.REACT_APP_API_URL + 'miners/profitDB', headers)\r\n        .then(response => response.json())\r\n        .then<Miners>(data => {\r\n            const treatedData: Miners = formatData(data)\r\n\r\n            return treatedData\r\n        })\r\n}\r\n\r\nfunction formatData(data: any): Miners {\r\n    return data\r\n}\r\n\r\nexport async function getAllPayouts(): Promise<Payout[]>{\r\n\r\nconst headers = {\r\n    }\r\n    return fetch(process.env.REACT_APP_API_URL + 'miners/payout/all', headers)\r\n        .then(response => response.json())\r\n        .then<Payout[]>(data => {\r\n            const treatedData: Payout[] = ((data:any):Payout[]=>data)(data)\r\n\r\n            return treatedData\r\n        })\r\n}","import React, { Context, useEffect, useReducer, useState } from 'react';\r\nimport { Bar, ChartData, HorizontalBar } from 'react-chartjs-2';\r\nimport chartjs, { ChartTooltipItem } from 'chart.js'\r\nimport Miners, { Currencies, Payout } from '../Interfaces/Interfaces';\r\nimport { Box, Button, Card, CircularProgress, Icon, Tab, Tabs, Typography } from '@material-ui/core';\r\nimport \"chartjs-plugin-datalabels\";\r\n\r\nexport enum ChartType {\r\n    Prop,\r\n    Dindin,\r\n    Hashrate,\r\n    Payout\r\n}\r\n\r\nexport interface HomeChartProps {\r\n    miners: Miners,\r\n    type: ChartType,\r\n    currency: Currencies,\r\n    payouts: Payout[]\r\n}\r\n\r\n\r\ninterface ChartProps {\r\n    miners: Miners, currency?: number, payouts?: Payout[]\r\n}\r\n\r\nexport default function HomeChart(props: HomeChartProps) {\r\n    let { miners, type, currency, payouts } = props;\r\n    return (<>\r\n        {(() => {\r\n            switch (type) {\r\n                case ChartType.Prop:\r\n                    return <PropChart miners={miners} />\r\n                case ChartType.Hashrate:\r\n                    return <HashrateChart miners={miners} />\r\n                case ChartType.Dindin:\r\n                    return <DindinChart miners={miners} currency={currency} />\r\n                case ChartType.Payout:\r\n                    return <PayoutsChart miners={miners} payouts={payouts} currency={currency} />\r\n            }\r\n        })()}\r\n    </>\r\n    )\r\n}\r\n\r\nfunction noDataChart() {\r\n    return (\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            height: \"50vh\"\r\n        }}>\r\n\r\n            <CircularProgress />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction getChartBorderColor(entries: number) {\r\n    let colors: string[] = []\r\n    for (let i = 0; i < entries; i++) {\r\n        colors.push(\r\n            i == 0 ? \"rgb(212,175,55)\" :\r\n                i == 1 ? \"rgb(192,192,192)\" :\r\n                    i == 2 ? \"rgb(205,127,50)\" :\r\n                        \"rgb(178,190,181)\"\r\n        )\r\n    }\r\n    return colors\r\n}\r\n\r\nfunction getChartColor(entries: number) {\r\n    let colors: string[] = []\r\n    for (let i = 0; i < entries; i++) {\r\n        colors.push(\r\n            i == 0 ? \"rgba(212,175,55,0.8)\" :\r\n                i == 1 ? \"rgba(192,192,192,0.8)\" :\r\n                    i == 2 ? \"rgba(205,127,50,0.8)\" :\r\n                        \"rgba(178,190,181,0.8)\"\r\n        )\r\n    }\r\n    return colors\r\n}\r\n\r\n\r\nfunction chartOptions(formatter: (value: any) => any): { height: number, options: Chart.ChartOptions } {\r\n    return {\r\n        height: window.innerHeight - 400,\r\n        options: {\r\n            maintainAspectRatio: false,\r\n            onResize: (newSize: any) => {\r\n                newSize.canvas.parentNode.style.height = (window.innerHeight - 400) + 'px'\r\n            },\r\n            responsive: true,\r\n            legend: {\r\n                display: false\r\n            },\r\n            plugins: {\r\n                datalabels: {\r\n                    color: 'white',\r\n                    font: {\r\n                        weight: 'bold'\r\n                    },\r\n                    align: \"center\",\r\n                    anchor: \"center\",\r\n                    clamp: true,\r\n                    formatter: formatter\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction PropChart(props: ChartProps) {\r\n    let { miners } = props\r\n    if (Object.values(miners).length == 0) {\r\n        return noDataChart()\r\n    }\r\n    const prop = \"Proporcao\"\r\n    let data = {\r\n        labels: Object.keys(miners).sort((a, b) => miners[b][prop] - miners[a][prop]),\r\n        datasets: [\r\n            {\r\n                backgroundColor: getChartColor(Object.keys(miners).length),\r\n                label: prop,\r\n                data: Object.values(miners).map(m => m[prop]).sort((a, b) => b - a),\r\n            }\r\n        ]\r\n    }\r\n    let { height, options } = chartOptions((v) => Math.round(v * 1000) / 10 + \"%\")\r\n    return (\r\n        <Bar\r\n            data={data}\r\n            height={height}\r\n            options={options}\r\n        />\r\n    )\r\n}\r\n\r\nfunction DindinChart(props: ChartProps) {\r\n    if (props.currency === null || props.currency === undefined) {\r\n        return <div>Chart Error, no Currency</div>\r\n    }\r\n    let { miners, currency } = props\r\n    if (Object.values(miners).length == 0) {\r\n        return noDataChart()\r\n    }\r\n    const currString = [\" (USD)\", \" (BRL)\", \" (ETH)\"];\r\n    const prop = [\"Dindin\", \"DindinBRL\", \"ETH\"] as const;\r\n\r\n\r\n    let data: ChartData<chartjs.ChartData> = {\r\n        labels: Object.keys(miners).sort((a, b) => miners[b][prop[currency]] - miners[a][prop[currency]]),\r\n        datasets: [\r\n            {\r\n                backgroundColor: getChartColor(Object.keys(miners).length),\r\n                label: \"Dindin\" + currString[currency],\r\n                data: Object.values(miners).map(m => m[prop[currency]]).sort((a, b) => b - a)\r\n            }\r\n        ]\r\n    }\r\n    let { height, options } = chartOptions((v) => {\r\n        return (currency === Currencies.ETH ?\r\n            Math.round(v * 100000) / 100000 :\r\n            Math.round(v * 100) / 100 + currString[currency])\r\n    })\r\n    return (\r\n        <Bar\r\n            data={data}\r\n            height={height}\r\n            options={options}\r\n        />\r\n    )\r\n}\r\n\r\nfunction HashrateChart(props: ChartProps) {\r\n    let { miners } = props\r\n    if (Object.values(miners).length == 0) {\r\n        return noDataChart()\r\n    }\r\n    const prop = \"HashRateMedio\"\r\n    let data: ChartData<chartjs.ChartData> = {\r\n        labels: Object.keys(miners).sort((a, b) => miners[b][prop] - miners[a][prop]),\r\n        datasets: [\r\n            {\r\n                backgroundColor: getChartColor(Object.keys(miners).length),\r\n                label: prop + \" (Mh/s)\",\r\n                data: Object.values(miners).map(m => m[prop]).sort((a, b) => b - a).map(a => { return a / 1e6 })\r\n            }\r\n        ]\r\n    }\r\n    let { height, options } = chartOptions((v: any) => Math.round(v * 100) / 100 + \" (Mh/s)\")\r\n    return (\r\n        <Bar\r\n            data={data}\r\n            height={height}\r\n            options={options}\r\n        />\r\n    )\r\n}\r\n\r\nfunction PayoutsChart(props: ChartProps) {\r\n    if (props.currency == null || !props.payouts) {\r\n        return <div>Chart Error, no Currency</div>\r\n    }\r\n    let { miners, currency, payouts } = props\r\n    if (Object.values(miners).length == 0) {\r\n        return noDataChart()\r\n    }\r\n\r\n    const currString = [\" (USD)\", \" (BRL)\", \" (ETH)\"];\r\n    const prop = [\"USD\", \"BRL\", \"ETH\"] as const;\r\n\r\n    let orderedPayouts = payouts.map(t => {\r\n        let obj: any[] = []\r\n\r\n        for (let key of Object.keys(miners)) {\r\n            let value: any = {}\r\n            if (t[key]) {\r\n                value = t[key]\r\n            } else {\r\n                value = {\r\n                    BRL: 0,\r\n                    ETH: 0,\r\n                    USD: 0\r\n                }\r\n            }\r\n            value['miner'] = key\r\n            obj.push(value)\r\n        }\r\n        return obj.sort((a, b) => {\r\n            return (\r\n                payouts.reduce((acc, cur) => {\r\n                    if (cur[b.miner]) {\r\n                        return acc + cur[b.miner]['BRL']\r\n                    }\r\n                    return acc + 0\r\n                }\r\n                    , 0)\r\n                - payouts.reduce((acc, cur) => {\r\n                    if (cur[a.miner]) {\r\n                        return acc + cur[a.miner]['BRL']\r\n                    }\r\n                    return acc\r\n                }\r\n                    , 0)\r\n            )\r\n        })\r\n    })\r\n\r\n\r\n    let data: ChartData<chartjs.ChartData> = {\r\n        labels: orderedPayouts[0]?.map(t => t.miner),\r\n        datasets: orderedPayouts.map(payout => {\r\n\r\n\r\n            return {\r\n                backgroundColor: getChartColor(Object.keys(miners).length),\r\n                borderColor: getChartBorderColor(Object.keys(miners).length),\r\n                borderWidth: 3,\r\n                label: \"Dindin\" + currString[currency],\r\n                data: payout.map(m => m[prop[currency]])\r\n            }\r\n        })\r\n    }\r\n    let { height, options } = chartOptions((v) => {\r\n        return ''\r\n    })\r\n    options['scales'] = {\r\n        xAxes: [{\r\n            stacked: true\r\n        }],\r\n        yAxes: [{\r\n            stacked: true\r\n        }]\r\n    }\r\n    options.tooltips = {\r\n        mode: \"label\",\r\n        callbacks: {\r\n            footer: (item: chartjs.ChartTooltipItem[], data: chartjs.ChartData) => {\r\n\r\n                return 'Soma: ' + item.reduce((acc, cur) => acc + Number(cur.xLabel), 0)\r\n            }\r\n        }\r\n    }\r\n    options.title = {\r\n        text: \"Soma Geral: \" + orderedPayouts.reduce((acc, cur) => acc + cur.reduce((a, c) => a + c[prop[currency]], 0), 0) + currString[currency],\r\n        display: true\r\n    }\r\n    return (\r\n        <HorizontalBar\r\n            data={data}\r\n            height={height}\r\n            options={options}\r\n        />\r\n    )\r\n}\r\n\r\n","import { makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Miners, { Currencies, MinerData, Payout } from \"../Interfaces/Interfaces\";\r\n\r\nconst useStyles = makeStyles({\r\n    table: {        \r\n        minWidth: 650,\r\n    }\r\n});\r\n\r\ninterface PayoutData {\r\n    USD: number,\r\n    BRL: number,\r\n    ETH: number,\r\n    miner: string\r\n}\r\ninterface TableData {\r\n    name: string,\r\n    hashrate: number,\r\n    proporcao: number,\r\n    dindin: number,\r\n    Sum: number\r\n}\r\nfunction createData(miners: Miners, payouts: Payout[], currency: Currencies): TableData[] {\r\n    const prop = [\"Dindin\", \"DindinBRL\", \"ETH\"] as const\r\n    const payoutProp = [\"USD\", \"BRL\", \"ETH\"] as const\r\n    let orderedPayouts = payouts.map(t => {\r\n        let obj: PayoutData[] = []\r\n        for (let [key, value] of Object.entries<any>(t)) {\r\n            value['miner'] = key\r\n            obj.push(value)\r\n        }\r\n        return obj\r\n    })\r\n    let minerData: MinerData[] = []\r\n    for (let [miner, data] of Object.entries(miners)) {\r\n        data.Name = miner\r\n        minerData.push(data)\r\n    }\r\n\r\n    return minerData.map(miner => {\r\n        return {\r\n            name: miner.Name || '',\r\n            hashrate: miner.HashRateMedio,\r\n            proporcao: miner.Proporcao,\r\n            dindin: miner[prop[currency]],\r\n            Sum: orderedPayouts.reduce((acc, cur) => {\r\n                let curMiner = cur.find(p => p.miner === miner.Name)\r\n                return curMiner ? acc + curMiner[payoutProp[currency]] : acc\r\n            }, 0)\r\n        }\r\n    });\r\n}\r\n\r\ninterface HomeTableProps {\r\n    miners: Miners,\r\n    currency: Currencies,\r\n    payouts: Payout[]\r\n}\r\nexport default function HomeTable(props: HomeTableProps) {\r\n    const { miners, currency, payouts } = props\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <TableContainer component={Paper} style={{marginTop:\"25px\"}}>\r\n            <Table className={classes.table} size=\"small\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Miner</TableCell>\r\n                        <TableCell align=\"right\">Hashrate Médio</TableCell>\r\n                        <TableCell align=\"right\">Proporção</TableCell>\r\n                        <TableCell align=\"right\">Dindin</TableCell>\r\n                        <TableCell align=\"right\">Soma dos Payouts</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {TableRows(miners, currency, payouts)}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}\r\n\r\n\r\nfunction TableRows(miners: Miners, currency: Currencies, payouts: Payout[]) {\r\n    const rows = createData(miners, payouts, currency)\r\n    const currString = [\" (USD)\", \" (BRL)\", \" (ETH)\"];\r\n    let tr = rows.map((row) => (\r\n        <TableRow key={row.name}>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n            </TableCell>\r\n            <TableCell align=\"right\">{Math.round(row.hashrate / 1000) / 1000} Mh/s</TableCell>\r\n            <TableCell align=\"right\">{Math.round(row.proporcao * 10000) / 100}%</TableCell>\r\n            <TableCell align=\"right\">{(currency === Currencies.ETH ?\r\n                Math.round(row.dindin * 100000) / 100000 :\r\n                Math.round(row.dindin * 100) / 100 )} {currString[currency]}</TableCell>\r\n            <TableCell align=\"right\">{(currency === Currencies.ETH ?\r\n                Math.round(row.Sum * 100000) / 100000 :\r\n                Math.round(row.Sum * 100) / 100 )} {currString[currency]}</TableCell>\r\n        </TableRow>\r\n    ))\r\n    return tr\r\n}","import React, { useEffect, useReducer, useState } from 'react';\r\nimport { Bar, ChartData } from 'react-chartjs-2';\r\n\r\nimport Miners, { Currencies, Payout } from '../Interfaces/Interfaces';\r\nimport { Box, Button, Card, CircularProgress, createStyles, Icon, makeStyles, Tab, Tabs, Theme, Typography } from '@material-ui/core';\r\nimport \"chartjs-plugin-datalabels\";\r\nimport { getAllPayouts, getProfit } from '../Utils/ApiServices';\r\nimport HomeChart, { ChartType } from './HomeChart';\r\nimport HomeTable from './HomeTable';\r\nimport classes from '*.module.css';\r\n\r\n\r\nconst useStyles = makeStyles((theme?: Theme) => ({\r\n    buttonHolder: {\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        margin: \"20px 0\",\r\n        alignItems: \"center\"        \r\n    },\r\n    separator: {\r\n        border: \"none\",\r\n        borderTop: \"solid 0.1em #333\"\r\n    },\r\n}))\r\ninterface TabPanelProps {\r\n    children?: React.ReactNode;\r\n    index: any;\r\n    value: any;\r\n}\r\nfunction TabPanel(props: TabPanelProps) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography component={'div'}>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nfunction a11yProps(index: any) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nexport default function Home() {\r\n    const [miners, setMiners] = useState<Miners>({});\r\n    const [payouts, setPayouts] = useState<Payout[]>([])\r\n    const [curChart, setChart] = useState<number>(0)\r\n    const [currency, setCurrency] = useState<Currencies>(Currencies.ETH)\r\n    const classes = useStyles()\r\n    useEffect(() => {\r\n        (async () => {\r\n            let profit_p = getProfit()\r\n            let payouts_p = getAllPayouts()\r\n            return await Promise.all([profit_p, payouts_p])\r\n        }\r\n        )()\r\n            .then((response) => {\r\n                setMiners(response[0]);\r\n                setPayouts(response[1])\r\n                setChart(0)\r\n            });\r\n    }, []);\r\n    return (\r\n        <>\r\n            <h2>\r\n                Home\r\n            </h2>\r\n            <hr className={classes.separator} />\r\n            <div>\r\n                <Tabs\r\n                    textColor=\"primary\"\r\n                    indicatorColor=\"primary\"\r\n                    value={curChart}\r\n                    onChange={(event, newValue) => { setChart(newValue) }}\r\n                    variant=\"scrollable\"\r\n                    scrollButtons=\"auto\"\r\n                    aria-label=\"simple tabs example\">\r\n                    <Tab icon={<Icon>leaderboard</Icon>} label=\"Hashrate Médio\" {...a11yProps(0)} />\r\n                    <Tab icon={<Icon>pie_chart</Icon>} label=\"Proporção\" {...a11yProps(1)} />\r\n                    <Tab icon={<Icon>attach_money</Icon>} label=\"Dindin\" {...a11yProps(2)} />\r\n                    <Tab icon={<Icon>archive</Icon>} label=\"Payouts\" {...a11yProps(3)} />\r\n                </Tabs>\r\n                <div className={classes.buttonHolder}>\r\n                    <Sum miners={miners} currency={currency}/>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => { changeCurrency(currency, setCurrency); }}\r\n                    >\r\n                        <Icon>swap_horiz</Icon>\r\n                        {currString(currency)}\r\n                    </Button>\r\n                </div>\r\n                <TabPanel value={curChart} index={0}>\r\n                    <HomeChart type={ChartType.Hashrate} miners={miners} currency={currency} payouts={payouts} />\r\n                </TabPanel>\r\n                <TabPanel value={curChart} index={1}>\r\n                    <HomeChart type={ChartType.Prop} miners={miners} currency={currency} payouts={payouts} />\r\n                </TabPanel>\r\n                <TabPanel value={curChart} index={2}>\r\n                    <HomeChart type={ChartType.Dindin} miners={miners} currency={currency} payouts={payouts} />\r\n                </TabPanel>\r\n                <TabPanel value={curChart} index={3}>\r\n                    <HomeChart type={ChartType.Payout} miners={miners} currency={currency} payouts={payouts} />\r\n                </TabPanel>\r\n                <div>\r\n                    <HomeTable miners={miners} currency={currency} payouts={payouts} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction Sum(props:{miners:Miners, currency: Currencies}){\r\n    let {miners, currency} = props;\r\n    console.log(miners);\r\n    const currString = [\" (USD)\", \" (BRL)\", \" (ETH)\"];\r\n    const prop = [\"Dindin\", \"DindinBRL\", \"ETH\"] as const;\r\n    let sum = Object.values(miners).reduce((acc,cur)=>acc+cur[prop[currency]],0)\r\n    let sumString = (currency === Currencies.ETH ?\r\n        Math.round(sum * 100000) / 100000 :\r\n        Math.round(sum * 100) / 100) + currString[currency]\r\n    console.log(sum)\r\n    return ( \r\n        <div style={{fontWeight: \"bold\", color:\"#3f51b5\"}}>\r\n            Soma Atual: {sumString}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction changeCurrency(currency: number, setCurrency: Function) {\r\n    setCurrency(currency + 1 >= Object.keys(Currencies).length / 2 ? 0 : currency + 1)\r\n}\r\n\r\n\r\nfunction currString(c: Currencies) {\r\n    return [\" (USD)\", \" (BRL)\", \" (ETH)\"][c]\r\n} ","import logo from './logo.svg';\r\nimport './App.css';\r\nimport { useEffect, useReducer, useState } from 'react';\r\nimport styled from 'styled-components'\r\nimport mdPath from './Changelog.md'\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tSwitch,\r\n\tRoute,\r\n\tLink,\r\n\r\n} from \"react-router-dom\";\r\nimport Home from './Components/Home';\r\nimport { AppBar, Box, Button, Checkbox, makeStyles, Modal, Toolbar, Typography } from '@material-ui/core';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\t\r\n    '@global': {\r\n        \"*::-webkit-scrollbar\": {\r\n            width: \"5px\",\r\n            height: \"5px\"\r\n        },        \r\n        \"*::-webkit-scrollbar-track\": {\r\n            boxShadow: \"inset 0 0 2px grey\",\r\n            borderRadius: \"10px\",\r\n        },\r\n        \"*::-webkit-scrollbar-thumb\": {\r\n            background: \"rgba(0,0,0,0.2)\",\r\n            borderRadius: \"10px\",\r\n        },\r\n        \"*::-webkit-scrollbar-thumb:hover\": {\r\n            background: \"rgba(0,0,0,0.6)\",\r\n        },\r\n      },\r\n\troot: {\r\n\t\tflexGrow: 1,\r\n\t},\r\n\tmenuButton: {\r\n\t\tmarginRight: theme.spacing(2),\r\n\t},\r\n\ttitle: {\r\n\t\tflexGrow: 1,\r\n\t},\r\n\ttoolbar: {\r\n\t\tdisplay: \"flex\"\r\n\t}\r\n}));\r\n\r\nfunction App() {\r\n\tconst classes = useStyles();\r\n\tconst [forceChangelog, setFC] = useState(false)\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<div className={classes.root}>\r\n\t\t\t\t<AppBar position=\"static\">\r\n\t\t\t\t\t<Toolbar className={classes.toolbar}>\r\n\t\t\t\t\t\t<Typography className={classes.title}>\r\n\t\t\t\t\t\t\t<Button color=\"inherit\" component={Link} to=\"/\">Miners</Button>\r\n\t\t\t\t\t\t</Typography>\r\n\r\n\t\t\t\t\t\t<Button color=\"inherit\" onClick={() => {\r\n\t\t\t\t\t\t\tlocalStorage.setItem(\"changelog\", null)\r\n\t\t\t\t\t\t\tlocalStorage.setItem(\"skip_changelog\", false)\r\n\t\t\t\t\t\t\tsetFC(true)\r\n\t\t\t\t\t\t}}>Ver Changelog</Button>\r\n\r\n\t\t\t\t\t</Toolbar>\r\n\t\t\t\t</AppBar>\r\n\t\t\t</div>\r\n\t\t\t<ChangelogModalHandler openInitial={forceChangelog} setFC={setFC} />\r\n\t\t\t<Box m={2} p={2} >\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route path=\"/\">\r\n\t\t\t\t\t\t<Home />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t</Switch>\r\n\t\t\t</Box  >\r\n\t\t</Router>\r\n\t);\r\n}\r\n\r\nfunction ChangelogModalHandler({ openInitial, setFC } = { openInitial: false, setFC: () => { } }) {\r\n\tconst modalStyles = makeStyles((theme) => ({\r\n\t\tmodal: {\r\n\t\t\tposition: 'absolute',\r\n\t\t\theight: '90%',\r\n\t\t\twidth: '80%',\r\n\t\t\tmaxWidth: \"600px\",\r\n\t\t\tdisplay: 'block',\r\n\t\t\tbackgroundColor: theme.palette.background.paper,\r\n\t\t\tborderRadius: \"5px\",\r\n\t\t\tborder: \"none\",\r\n\t\t\tpadding: theme.spacing(2, 4, 3),\r\n\t\t\tdisplay: \"grid\",\r\n\t\t\tgridTemplateColumns: \"1fr\",\r\n\t\t\tgridTemplateRows: \"auto 1fr auto\",\r\n\t\t\tgridTemplateAreas: \"'header''main''footer'\",\r\n\t\t},\r\n\r\n\t\t\"#app > header\": {\r\n\t\t\tgridArea: \"'header'\",\r\n\t\t},\r\n\r\n\t\t\"#app > main\": {\r\n\t\t\tgridArea: \"'main'\",\r\n\t\t\tpadding: \"15px 5px 10px 5px\",\r\n\t\t},\r\n\r\n\t\t\"#app > footer\": {\r\n\t\t\tgridArea: \"'footer'\",\r\n\t\t},\r\n\t\tfooter: {\r\n\t\t\tdisplay: \"flex\",\r\n\t\t\talignItems: \"center\",\r\n\t\t}\r\n\t}))\r\n\tfunction getModalStyle() {\r\n\t\tconst top = 50\r\n\t\tconst left = 50\r\n\r\n\t\treturn {\r\n\t\t\tborder: \"none\",\r\n\t\t\ttop: `${top}%`,\r\n\t\t\tleft: `${left}%`,\r\n\t\t\ttransform: `translate(-${top}%, -${left}%)`,\r\n\t\t};\r\n\t}\r\n\tconst classes = modalStyles();\r\n\t// getModalStyle is not a pure function, we roll the style only on the first render\r\n\tconst [modalStyle] = useState(getModalStyle);\r\n\tconst [open, setOpen] = useState(openInitial);\r\n\tconst [md, setMd] = useState('');\r\n\tconst [checked, setChecked] = useState(true);\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetChecked(event.target.checked);\r\n\t};\r\n\r\n\tconst handleOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\r\n\tconst handleClose = () => {\r\n\t\tlocalStorage.setItem(\"skip_changelog\", !checked)\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\tuseState((() => {\r\n\t\tlet skip = JSON.parse(localStorage.getItem(\"skip_changelog\"))\r\n\t\tsetFC(false)\r\n\t\tif (!skip) {\r\n\t\t\tfetch(mdPath).then((response) => response.text()).then((text) => {\r\n\t\t\t\tsetMd(text)\r\n\t\t\t\tlet oldChangelog = localStorage.getItem(\"changelog\")\r\n\t\t\t\tlet newChangelog = btoa(unescape(encodeURIComponent(text)))\r\n\t\t\t\tif (oldChangelog !== newChangelog) {\r\n\t\t\t\t\tsetOpen(true)\r\n\t\t\t\t\tlocalStorage.setItem(\"changelog\", newChangelog)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t})())\r\n\r\n\tconst body = (\r\n\t\t<div style={modalStyle} className={classes.modal}>\r\n\t\t\t<h1 id=\"changelog-modal\">Changelog</h1>\r\n\t\t\t<div style={{ overflowY: 'scroll', height: \"85%\" }}>\r\n\t\t\t\t<ReactMarkdown >{md}</ReactMarkdown>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.footer}>\r\n\t\t\t\t<Checkbox\r\n\t\t\t\t\tchecked={checked}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tinputProps={{ 'aria-label': 'primary checkbox' }}\r\n\t\t\t\t/>\r\n\t\t\t\tContinuar Recebendo Atualizações de Changelog\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tdisableElevation\r\n\t\t\t\t\t\tonClick={handleClose}>Fechar</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Modal\r\n\t\t\t\topen={open}\r\n\t\t\t\tonClose={handleClose}\r\n\t\t\t\taria-labelledby=\"simple-modal-title\"\r\n\t\t\t\taria-describedby=\"simple-modal-description\"\r\n\t\t\t>\r\n\t\t\t\t{body}\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nrequire('dotenv').config()\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}